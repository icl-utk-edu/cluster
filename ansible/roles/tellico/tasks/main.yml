
- name: Enable the firewall
  service: name=firewalld state=started enabled=yes

- name: Set the ICL network source
  firewalld: zone=internal source=160.36.131.0/24  permanent=true state=enabled immediate=true

- name: Add internal cluster network to the trusted zone
  firewalld: zone=trusted source=192.168.0.0/16  permanent=true state=enabled immediate=true

- name: Enable optional yum repository
  command: subscription-manager repo-override --repo=rhel-7-for-power-9-optional-rpms --add=enabled:true

- name: Install research packages
  yum:
    state: installed
    name:
      - "@development"
#      - "@^compute-node-environment"
      - "@performance"
      - "@debugging"
      - git
      - tmux
      - binutils-devel
      - emacs-nox
      - hmaccalc
      - mercurial
      - ncurses-devel
      - numactl
      - readline-devel
      - vim-X11
      - zlib-devel
      - tcl
      - deltarpm
      - zsh
      - hwloc
      - xauth
      - java-1.8.0-openjdk-devel

- name: Install PCP packages
  yum:
    state: installed
    name:
      - pcp-libs-devel
      - pcp-pmda-perfevent
      - pcp-pmda-gpfs
      - pcp-pmda-infiniband
      - pcp-pmda-nvidia-gpu
  notify: Restart pmcd

#- name: Install custom perfevent.conf
#  copy: src=perfevent.conf dest=/var/lib/pcp/pmdas/perfevent/perfevent.conf
#  notify: Restart pmcd

- name: Enable pmcd (PCP) service
  service: name=pmcd state=started enabled=yes

- name: Enable papi group to modify powercap-current
  cron: 
    name: "Enable powercap-current modification"
    job: "chgrp papi /sys/firmware/opal/powercap/system-powercap/powercap-current /sys/firmware/opal/exports/occ_inband_sensors; chmod g+r /sys/firmware/opal/exports/occ_inband_sensors"
    special_time: reboot
  when: ansible_hostname == "tellico-master0"

- name: Enable CUDA repo
  copy: src=cuda.repo dest=/etc/yum.repos.d/

- name: Enable custom RPM repo
  copy: src=custom.repo dest=/etc/yum.repos.d/

- name: Install custom RPMs
  yum:
    state: installed
    name:
      - nvidia_peer_memory
      - gdrcopy
      - gdrcopy-kmod
      - gdrcopy-devel
      - essl*
  environment:
    IBM_ESSL_LICENSE_ACCEPT: 'yes'

- name: Enable nvidia-persistenced
  service: name=nvidia-persistenced state=started enabled=yes

- name: Install module command
  copy: src=modules.sh dest=/etc/profile.d/

- name: Mount tmpfs on /tmp
  service: name=tmp.mount enabled=yes
  when: ansible_os_family == "RedHat"

- name: Enable NV profiling
  copy: src=modprobe_nv_profiling.conf dest=/etc/modprobe.d/

