#!/usr/bin/perl

use strict;
use warnings;
use lib "/newton/scripts";
use Newton;
use Data::Dumper;

die 'DANGER!';

my $db = Newton::db();
$db->{RaiseError} = 1;

my $table = shift @ARGV;

my ($create) = $db->selectrow_array(
  'SELECT sql FROM sqlite_master WHERE name=?',
  undef, $table,
  );
#$db = bless {};

$db->do('BEGIN TRANSACTION');
my ($fields) = $create =~ /\((.+)\)/;
my %cols = map {/^\s*(\w+)\s+(.+)$/;$1,$2} split(',', $fields);
$fields = join(',', map {"$_ $cols{$_}"} sort keys %cols);
$db->do("CREATE TEMPORARY TABLE temp ($fields)");
my $cols = join(',', sort keys %cols);
$db->do("INSERT INTO temp SELECT $cols FROM $table");
$db->do("DROP TABLE $table");
my %newcols = %cols;
# make changes to %newcols
$newcols{nodeset} = 'text';
#
my $newfields = join(',', map {"$_ $newcols{$_}"} sort keys %newcols);
$db->do("CREATE TABLE $table ($newfields)");
my $newcols = join(',', grep {$newcols{$_}} sort keys %cols);
$db->do("INSERT INTO $table ($newcols) SELECT $newcols FROM temp");
$db->do('DROP TABLE temp');
$db->do('COMMIT');

sub do {
  my $self = shift;
  my $text = shift;
  print "$text\n";
  }

__END__

BEGIN TRANSACTION;
CREATE TEMPORARY TABLE t1_backup(a,b);
INSERT INTO t1_backup SELECT a,b FROM t1;
DROP TABLE t1;
CREATE TABLE t1(a,b);
INSERT INTO t1 SELECT a,b FROM t1_backup;
DROP TABLE t1_backup;
COMMIT;


