#!/usr/bin/perl
#
# Create a USER-level user:
# user set name 3 monitor
# user set password 3 asldkfasldkf
# user enable 3
# chassis setaccess 1 3 link=on ipmi=on callin=on privilege=2
# must call ipmitool with "-L USER"
#
use strict;
use warnings;
use Newton;
use Data::Dumper;

Newton::sudo();

my $node = shift @ARGV;
my $db = Newton::db();
my $new_pw = Newton::bmc_passwd();
print "New BMC password is '$new_pw'\n";
my $ip;
if(defined $node){
  $ip = $db->selectall_arrayref(
    'SELECT ip,name,system FROM addresses WHERE system like ? and type="bmc"',
    undef, "$node\%",
    );
} else {
  print "Changing all BMC passwords.  Press <ENTER> to continue.\n";
  <>;
  $ip = $db->selectall_arrayref(
    'SELECT ip,name,system FROM addresses WHERE type="bmc"',
    );
  }
die "Error: No BMC address found.\n" unless defined $ip;
my $old_pw  = $ENV{BMC_PASSWD} || Newton::get_passwd('Old BMC password');
for(@$ip){
  my ($ip, $name, $system) = @$_;
  my $bmc_ip = Newton::ipaddr($ip);
  my @info = ipmi_cmd('user list 1', $system, $bmc_ip, $old_pw);
  my ($user_id) = map {$_->[0]}
                grep {$_->[1] eq 'root'} 
                map {[split /\s+/]} @info;
  unless(defined $user_id){
    warn "No user ID found for root at $system";
    next;
    }
  print "Changing BMC password for $system\n";
  print ipmi_cmd("user set password $user_id $new_pw", $system, $bmc_ip, $old_pw);
  }

sub ipmi_cmd {
  my ($cmd, $system, $bmc, $password) = @_;
  my @data;
  if(defined $bmc and defined $password and $password ne ''){
    warn "Using ipmi interface\n";
    @data = Newton::ipmi($cmd, $bmc, $password);
  } else {
    warn "Using system interface\n";
    @data = Newton::ssh("ipmitool $cmd", $system);
  }
  return @data;
}
