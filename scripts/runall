#!/usr/bin/perl

use strict;
use warnings;
#use Getopt::Long;
use lib "/newton/scripts";
use Options;
use Newton;
use Data::Dumper;


=cut
Getopt::Long::Configure("bundling");
my %opt;
my $ok = GetOptions(
	\%opt,
	'oneline|l',
	'nodes|n=s',
        'timeout=n',
        'where|w=s',
        'ipmi|i',
        'password=s',
	'parallel|p=n',
	'help|h',
	'v',
	);
=cut

my %opt = GetOptions(help());

my $cmd = join(' ',@ARGV);
if(not defined $cmd or $cmd !~ /.+/){
	die help();
	}
die "IPMI password support not implemented!\n" if $opt{password};

my $data = Newton::runall(command=>$cmd, %opt);
for(@$data){
  my $node = $_->{id};
  my $info = join('', @{ $_->{data} });
  $info = '' unless defined $info;
  $info =~ s/\n+$//gs;
  if($opt{oneline}){
    print "$node: $info\n";
    }
  else {
    print "$node\n",("-" x 10),"\n";
    print "$info\n\n";
    }
}

sub help {
        return <<End
This program runs a given command on every node in the cluster.
Usage:  runall [option] <command>

Options include:
	-l, --oneline  - Print the output on the same line as the node name
	-p,--parallel=i  - Number of machine to parallelize over
	-n, --nodes=s    - String or regex that describes the subset of node 
                         names to run on
        -w, --where=s    - Select all nodes matching the given SQL string
        --timeout=i - Timeout for the command
        -i,--ipmi      - Run as an IPMI command on the management interface
        --password     - The IPMI password to use
	-h, --help         - Show this message
End
;
        }

