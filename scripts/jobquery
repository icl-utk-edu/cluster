#!/usr/bin/perl

use strict;
use warnings;
use DBI;
use Date::Parse;
use Newton;
use Data::Dumper;

my $query = join(' ', @ARGV);
unless(defined $query and $query =~ /\S+/){
  die "Usage: jobquery '<SQL Query>'\n";
  }

my @fields = qw/jobid priority name user state queue slots time unixgroup ftickets stickets/;
my $fields = join(',', @fields);
my $place = join(',', map {'?'} @fields);

my $dbfile = '/tmp/asdf.db';
unlink $dbfile;
my $db = DBI->connect(
  "dbi:SQLite:dbname=$dbfile","","",{RaiseError => 1, AutoCommit => 0}) 
  || die $DBI::errstr;


$db->do("CREATE table jobs ($fields)");
my $sth = $db->prepare("INSERT INTO jobs ($fields) VALUES ($place)");

#print "Getting jobs\n";
my @jobs = Newton::joblist('-ext -u *');

#print "Creating database\n";
my %grp;
my $c = 0;
for(@jobs){
  my %info = %$_;
  #print $c++,"\n";
  $sth->execute( prepare_job(%info) );
  }
undef $sth;
$db->commit;

#print "Executing query\n";
my $result = $db->selectall_arrayref( $query );
my $cols = @{$result->[0]} - 1;

#print "Formatting output\n";
my @width;
for(@$result){
  my $record = $_;
  for(0..$cols){
    my $len = length($record->[$_] || '');
    $width[$_] = $len if not defined $width[$_] or $len > $width[$_];
    }
  }

for(@$result){
  my $record = $_;
  for(0..$cols){
    my $width = $width[$_] + 2;
    printf "\%-${width}s", $record->[$_] || '';
    }
  print "\n";
  }

$db->disconnect();



sub count_array {
  my $tasks = shift;
  my ($n1, $n2, $inc) = $tasks =~ /^(\d+)-(\d+):(\d+)$/;
  my @out;
  for(my $i=$n1;$i<=$n2;$i+=$inc){
    push @out, $_;
    }
  return @out;
  }

sub prepare_job {
  my %info = @_;
  my $time = $info{JAT_start_time} || $info{JB_submission_time};
  $info{unixtime} = str2time($time);
  #$info{unixgroup} = unixgroup($info{JB_owner});
  return map {$info{$_}} qw/JB_job_number JAT_prio JB_name JB_owner state queue_name slots unixtime JB_project ftickets stickets/;
  }

sub unixgroup {
  my $uid = shift;
  return $grp{$uid} if $grp{$uid};
  my ($grp) = `id $uid` =~ /gid\=\d+\((\S+)\)/;
  $grp{$uid} = $grp;
  return $grp;
  }
