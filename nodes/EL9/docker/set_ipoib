#!/usr/bin/perl

use strict;
use warnings;
use JSON::PP 'decode_json';
use Data::Dumper;

my $json = decode_json(`ip -json a`);

# Find interfaces that are LOWER_UP
my @out = grep {is_up($_)} @$json;

# Get the ethernet address
my ($iface_eth) = grep {$_->{local} =~ /^10\./} # IP is in the private cluster address range
                  grep {$_->{scope} eq 'global'}
                  map {@{$_->{addr_info}}}
                  grep {$_->{link_type} eq 'ether'}
                  @out;
die "Error: no ethernet interface found\n" unless defined $iface_eth;

# Get the infiniband device name
my ($iface_ib) = map {$_->{ifname}}
	         grep {$_->{link_type} eq 'infiniband'}
                 @out;
die "Error: no infiniband interface found\n" unless defined $iface_ib;

my $addr_eth = $iface_eth->{local};
my $mask_eth = $iface_eth->{prefixlen};

# Increment +10 the second octet of the IP address to derive the new IB address
my @addr = split(/\./, $addr_eth);
$addr[1] = $addr[1]+10;
my $addr_ib = join('.', @addr);

print `ip a add $addr_ib/$mask_eth dev $iface_ib`;

sub is_up {
   my $flags = (shift)->{flags};
   return grep {$_ eq 'LOWER_UP'} @$flags;
   }

